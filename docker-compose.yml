# To build the entire stack run 'make run'

services:
  tarkov_data_manager:
    container_name: tarkov_data_manager
    restart: unless-stopped
    build:
      context: ./src/tarkov-data-manager
      dockerfile: ./Dockerfile
    env_file: 
      - ./src/tarkov-data-manager/config.env
      - ./src/tarkov-data-manager/creds.env
    ports:
      - 4000:4000
    volumes:
      - ./src/tarkov-data-manager/settings:/app/settings
      - ./src/tarkov-data-manager/cache:/app/cache
      - ./src/tarkov-data-manager/logs:/app/logs
      - ./src/tarkov-data-manager/dumps:/app/dumps
      - ./src/tarkov-data-manager/node-logs:/home/node/.npm/_logs
    depends_on:
      - primary
      - replica
      - nginx

  # the primary node for the libsql database
  primary:
    # https://github.com/tursodatabase/libsql/pkgs/container/libsql-server/184665658?tag=v0.23.4
    build:
      context: ./src/libsql
      dockerfile: ./Dockerfile
    environment:
      - SQLD_NODE="primary"
      - SQLD_HTTP_LISTEN_ADDR=0.0.0.0:8081
      - SQLD_GRPC_LISTEN_ADDR=0.0.0.0:5001
      # - SQLD_ENABLE_BOTTOMLESS_REPLICATION=true
      # - LIBSQL_BOTTOMLESS_BUCKET="the-hideout-libsql"
      # - LIBSQL_BOTTOMLESS_ENDPOINT="http://s3:9000"
      # - LIBSQL_BOTTOMLESS_AWS_DEFAULT_REGION="us-east-1"
      # - RUST_LOG="info,bottomless=trace"
      - RUST_LOG="info"
    ports:
      - "8081:8081" # HTTP API
      - "5001:5001" # gRPC API
    # depends_on:
    #   - s3
    volumes:
      - libsql_data:/var/lib/sqld

  # the replica node for the libsql database
  replica:
    # https://github.com/tursodatabase/libsql/pkgs/container/libsql-server/184665658?tag=v0.23.4
    build:
      context: ./src/libsql
      dockerfile: ./Dockerfile
    environment:
      - SQLD_NODE=replica
      - SQLD_PRIMARY_URL=http://primary:5001
      - SQLD_HTTP_LISTEN_ADDR=0.0.0.0:8082
    depends_on:
      - primary
    volumes:
      - libsql_data:/var/lib/sqld
    ports:
      - "8082:8082" # HTTP API
      - "5002:5002" # gRPC API

  nginx:
    image: nginx:1.25.4
    volumes:
      - ./src/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - replica
    ports:
      - "6002:6002"
      - "8080:8080"

  # s3:
  #   image: minio/minio:RELEASE.2024-03-07T00-43-48Z
  #   command: ["minio", "server", "/data"]
  #   ports:
  #     - "9000:9000" # API port
  #     # - "9001:9001" # Console port
  #   volumes:
  #     - ./data/minio_data:/data
  #   env_file: 
  #     - ./src/minio/config.env
  #     - ./src/minio/creds.env

  caddy:
    container_name: caddy-service
    restart: unless-stopped
    build:
      context: ./src/caddy
      dockerfile: ./Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/caddy_data:/data
      - ./data/caddy_config:/config
    depends_on:
      - tarkov_data_manager
    environment:
      PROXY_BACKEND: tarkov_data_manager
      PROXY_PORT: 4000
      DOMAIN: ${DOMAIN}

  # a dev container that has curl on a basic ubuntu image
  curl:
    image: curlimages/curl:latest
    command: ["tail", "-f", "/dev/null"]

volumes:
  minio_data:
  caddy_data:
  caddy_config:
  settings:
  cache:
  logs:
  dumps:
  libsql_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/libsql_data
